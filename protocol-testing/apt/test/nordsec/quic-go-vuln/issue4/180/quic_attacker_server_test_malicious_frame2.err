DEBUG:panther-test:Setting process limits
DEBUG:panther-test:Initial memory limits: soft=-1, hard=-1
DEBUG:panther-test:Updated memory limits: soft=786432000, hard=-1
runtime/cgo: pthread_create failed: Resource temporarily unavailable
SIGABRT: abort
PC=0x7ffff7de600b m=0 sigcode=18446744073709551610

goroutine 0 [idle]:
runtime: unknown pc 0x7ffff7de600b
stack: frame={sp:0x7fffffffddc0, fp:0x0} stack=[0x7fffff7ff448,0x7fffffffe480)
00007fffffffdcc0:  0000000000000001  000000000081323f 
00007fffffffdcd0:  0000000000072d99  0000000000072d99 
00007fffffffdce0:  0000000000000000  0000000000000000 
00007fffffffdcf0:  0000000000905820  00000000008aee68 
00007fffffffdd00:  00007fffffffddc0  0000000000450588 <runtime.adjustframe+136> 
00007fffffffdd10:  00007fffffffe088  00007fffffffdd48 
00007fffffffdd20:  00007fffffffdd58  000000000040155c <x_cgo_mmap+12> 
00007fffffffdd30:  0000000000000000  000000000046dbfe <runtime.callCgoMmap+62> 
00007fffffffdd40:  00007fffffffdd48  0000000000000000 
00007fffffffdd50:  0000000000000000  00007fffffffdd98 
00007fffffffdd60:  0000000000461dd8 <runtime.mmap.func1+88>  0000000000000000 
00007fffffffdd70:  0000000000040000  0000002200000003 
00007fffffffdd80:  00000000ffffffff  00007fffd05c0000 
00007fffffffdd90:  00007fffffffddd8  00007fffffffde10 
00007fffffffdda0:  0000000000404e3e <runtime.mmap+158>  00007fffffffdde0 
00007fffffffddb0:  00007fff00000000  0000000000000000 
00007fffffffddc0: <0000000000000000  000000000045bc55 <runtime.gentraceback+4405> 
00007fffffffddd0:  00007fffffffe088  00007fffffffde08 
00007fffffffdde0:  00007fffffffde18  000000000040155c <x_cgo_mmap+12> 
00007fffffffddf0:  0000000000040000  000000000046dbfe <runtime.callCgoMmap+62> 
00007fffffffde00:  00007fffffffde08  000000000015c061 
00007fffffffde10:  00007fffffffde60  00007fffffffde58 
00007fffffffde20:  0000000000461dd8 <runtime.mmap.func1+88>  0000000000000000 
00007fffffffde30:  0000000000010000  0000002200000003 
00007fffffffde40:  fffffffe7fffffff  ffffffffffffffff 
00007fffffffde50:  ffffffffffffffff  ffffffffffffffff 
00007fffffffde60:  ffffffffffffffff  ffffffffffffffff 
00007fffffffde70:  ffffffffffffffff  ffffffffffffffff 
00007fffffffde80:  ffffffffffffffff  ffffffffffffffff 
00007fffffffde90:  ffffffffffffffff  ffffffffffffffff 
00007fffffffdea0:  ffffffffffffffff  ffffffffffffffff 
00007fffffffdeb0:  ffffffffffffffff  ffffffffffffffff 
runtime: unknown pc 0x7ffff7de600b
stack: frame={sp:0x7fffffffddc0, fp:0x0} stack=[0x7fffff7ff448,0x7fffffffe480)
00007fffffffdcc0:  0000000000000001  000000000081323f 
00007fffffffdcd0:  0000000000072d99  0000000000072d99 
00007fffffffdce0:  0000000000000000  0000000000000000 
00007fffffffdcf0:  0000000000905820  00000000008aee68 
00007fffffffdd00:  00007fffffffddc0  0000000000450588 <runtime.adjustframe+136> 
00007fffffffdd10:  00007fffffffe088  00007fffffffdd48 
00007fffffffdd20:  00007fffffffdd58  000000000040155c <x_cgo_mmap+12> 
00007fffffffdd30:  0000000000000000  000000000046dbfe <runtime.callCgoMmap+62> 
00007fffffffdd40:  00007fffffffdd48  0000000000000000 
00007fffffffdd50:  0000000000000000  00007fffffffdd98 
00007fffffffdd60:  0000000000461dd8 <runtime.mmap.func1+88>  0000000000000000 
00007fffffffdd70:  0000000000040000  0000002200000003 
00007fffffffdd80:  00000000ffffffff  00007fffd05c0000 
00007fffffffdd90:  00007fffffffddd8  00007fffffffde10 
00007fffffffdda0:  0000000000404e3e <runtime.mmap+158>  00007fffffffdde0 
00007fffffffddb0:  00007fff00000000  0000000000000000 
00007fffffffddc0: <0000000000000000  000000000045bc55 <runtime.gentraceback+4405> 
00007fffffffddd0:  00007fffffffe088  00007fffffffde08 
00007fffffffdde0:  00007fffffffde18  000000000040155c <x_cgo_mmap+12> 
00007fffffffddf0:  0000000000040000  000000000046dbfe <runtime.callCgoMmap+62> 
00007fffffffde00:  00007fffffffde08  000000000015c061 
00007fffffffde10:  00007fffffffde60  00007fffffffde58 
00007fffffffde20:  0000000000461dd8 <runtime.mmap.func1+88>  0000000000000000 
00007fffffffde30:  0000000000010000  0000002200000003 
00007fffffffde40:  fffffffe7fffffff  ffffffffffffffff 
00007fffffffde50:  ffffffffffffffff  ffffffffffffffff 
00007fffffffde60:  ffffffffffffffff  ffffffffffffffff 
00007fffffffde70:  ffffffffffffffff  ffffffffffffffff 
00007fffffffde80:  ffffffffffffffff  ffffffffffffffff 
00007fffffffde90:  ffffffffffffffff  ffffffffffffffff 
00007fffffffdea0:  ffffffffffffffff  ffffffffffffffff 
00007fffffffdeb0:  ffffffffffffffff  ffffffffffffffff 

goroutine 1 [select, 2 minutes]:
github.com/lucas-clemente/quic-go.(*baseServer).accept(0xc0000e24d0, 0x7a0150, 0xc0000bc058, 0x465a60, 0xc0000b3c28, 0xc0000b3c30, 0x18)
	/app/implementations/quic-implementations/quic-go/server.go:271 +0xc5
github.com/lucas-clemente/quic-go.(*earlyServer).Accept(0xc0000c0088, 0x7a0150, 0xc0000bc058, 0x7a2300, 0xc0000f2000, 0x0, 0x0)
	/app/implementations/quic-implementations/quic-go/server.go:119 +0x46
github.com/lucas-clemente/quic-go/interop/http09.(*Server).ListenAndServe(0xc00009b260, 0xc, 0x0)
	/app/implementations/quic-implementations/quic-go/interop/http09/server.go:81 +0x251
main.runHTTP09Server(0xc0000e2420, 0x115b, 0xc0000c0018, 0x79be00)
	/app/implementations/quic-implementations/quic-go/server/main.go:94 +0x23f
main.main()
	/app/implementations/quic-implementations/quic-go/server/main.go:73 +0x56f

goroutine 37 [IO wait, 2 minutes]:
internal/poll.runtime_pollWait(0x7fffd12c8f38, 0x72, 0xc00012e420)
	/usr/local/go/src/runtime/netpoll.go:222 +0x55
internal/poll.(*pollDesc).wait(0xc0000c4098, 0x72, 0xc00012e400, 0x0, 0x0)
	/usr/local/go/src/internal/poll/fd_poll_runtime.go:87 +0x45
internal/poll.(*pollDesc).waitRead(...)
	/usr/local/go/src/internal/poll/fd_poll_runtime.go:92
internal/poll.(*FD).RawRead(0xc0000c4080, 0xc0001598c0, 0x0, 0x0)
	/usr/local/go/src/internal/poll/fd_unix.go:553 +0xff
net.(*rawConn).Read(0xc0000c0050, 0xc0001598c0, 0x8, 0xc0000d82c0)
	/usr/local/go/src/net/rawconn.go:43 +0x68
golang.org/x/net/internal/socket.(*Conn).recvMsgs(0xc0000ca020, 0xc0000d82c0, 0x8, 0x8, 0x0, 0xc00013a240, 0xc000057e10, 0xc00004ac00)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210428140749-89ef3d95e781/internal/socket/rawconn_mmsg.go:37 +0x1b2
golang.org/x/net/internal/socket.(*Conn).RecvMsgs(...)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210428140749-89ef3d95e781/internal/socket/socket.go:267
golang.org/x/net/ipv4.(*payloadHandler).ReadBatch(0xc0000cc010, 0xc0000d82c0, 0x8, 0x8, 0x0, 0x0, 0x0, 0x0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210428140749-89ef3d95e781/ipv4/batch.go:80 +0xaf
github.com/lucas-clemente/quic-go.(*oobConn).ReadPacket(0xc0000c4100, 0xc00016efc0, 0x0, 0x0)
	/app/implementations/quic-implementations/quic-go/sys_conn_oob.go:150 +0x1f5
github.com/lucas-clemente/quic-go.(*packetHandlerMap).listen(0xc0000e2370)
	/app/implementations/quic-implementations/quic-go/packet_handler_map.go:347 +0x6c
created by github.com/lucas-clemente/quic-go.newPacketHandlerMap
	/app/implementations/quic-implementations/quic-go/packet_handler_map.go:163 +0x285

goroutine 38 [select, 2 minutes]:
github.com/lucas-clemente/quic-go.(*baseServer).run(0xc0000e24d0)
	/app/implementations/quic-implementations/quic-go/server.go:233 +0xfa
created by github.com/lucas-clemente/quic-go.listen
	/app/implementations/quic-implementations/quic-go/server.go:219 +0x545

rax    0x0
rbx    0x7ffff7da0740
rcx    0x7ffff7de600b
rdx    0x0
rdi    0x2
rsi    0x7fffffffddc0
rbp    0x79f542
rsp    0x7fffffffddc0
r8     0x0
r9     0x7fffffffddc0
r10    0x8
r11    0x246
r12    0x97f820
r13    0x0
r14    0x793e1a
r15    0x0
rip    0x7ffff7de600b
rflags 0x246
cs     0x33
fs     0x0
gs     0x0
