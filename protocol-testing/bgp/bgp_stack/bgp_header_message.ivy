#ivy lang1.7


#  Each message has a fixed-size header.  There may or may not be a data
#    portion following the header, depending on the message type.  The
#    layout of these fields is shown below:

#       0                   1                   2                   3
#       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
#       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
#       |                                                               |
#       +                                                               +
#       |                                                               |
#       +                                                               +
#       |                           Marker                              |
#       +                                                               +
#       |                                                               |
#       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
#       |          Length               |      Type     |
#       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

#       Marker:

#          This 16-octet field is included for compatibility; it MUST be
#          set to all ones.

#       Length:

#          This 2-octet unsigned integer indicates the total length of the
#          message, including the header in octets.  Thus, it allows one
#          to locate the (Marker field of the) next message in the TCP
#          stream.  The value of the Length field MUST always be at least
#          19 and no greater than 4096, and MAY be further constrained,
#          depending on the message type.  "padding" of extra data after
#          the message is not allowed.  Therefore, the Length field MUST
#          have the smallest value required, given the rest of the
#          message.

#       Type:

#          This 1-octet unsigned integer indicates the type code of the
#          message.  This document defines the following type codes:

#                               1 - OPEN
#                               2 - UPDATE
#                               3 - NOTIFICATION
#                               4 - KEEPALIVE

#          [RFC2918] defines one more type code.


object bgp_header_message = {
    type this = struct {
        marker: marker_id,         
        length: stream_pos,
        bgp_type : bgp_message_type,
        payload: stream_data
    }
}

action bgp_header_message_event(src:ip.endpoint,dst:ip.endpoint,bpg_message:bgp_header_message) = {}